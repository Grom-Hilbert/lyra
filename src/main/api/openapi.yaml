openapi: 3.0.3
info:
  title: Lyra 企业级文档管理系统 API
  description: |
    Lyra是一个企业级云原生文档管理系统，提供带有版本控制的文档管理服务。
    
    ## 核心功能
    - 用户认证与授权管理
    - 文件上传、下载、管理
    - 文件夹结构化管理
    - 文件搜索与版本控制
    - WebDAV协议支持
    - 权限管理与空间隔离
    
    ## 技术架构
    - **后端**: Spring Boot 3.5.x + Spring Security + JPA
    - **数据库**: SQLite/MySQL/PostgreSQL + Redis
    - **部署**: Docker + Kubernetes + Helm
    
    ## API特性
    - RESTful设计规范
    - JWT令牌认证
    - 统一响应格式
    - 完整的错误处理
    - 分页和排序支持
    - 文件流传输优化
    
    ## 文档结构
    本API文档采用模块化设计，拆分为多个文件：
    - `components/`: 组件定义（schemas、responses、parameters、security）
    - `paths/`: API路径定义（按功能模块拆分）
    - `tags/`: 标签分组定义
    
  version: "1.0.0"
  termsOfService: https://github.com/your-org/lyra/blob/main/TERMS.md
  contact:
    name: Lyra API Support
    url: https://github.com/your-org/lyra
    email: support@lyra.example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: 本地开发环境
  - url: https://api-dev.lyra.example.com
    description: 开发环境
  - url: https://api-staging.lyra.example.com  
    description: 预发布环境
  - url: https://api.lyra.example.com
    description: 生产环境

# ==================== 安全方案 ====================
security:
  - BearerAuth: []

# ==================== 组件定义 ====================
components:
  # 安全认证方案
  securitySchemes:
    BearerAuth:
      $ref: './components/security/schemes.yaml#/BearerAuth'
    ApiKeyAuth:
      $ref: './components/security/schemes.yaml#/ApiKeyAuth'
    BasicAuth:
      $ref: './components/security/schemes.yaml#/BasicAuth'

  # 数据模型定义
  schemas:
    # 通用模型
    ApiResponse:
      $ref: './components/schemas/common.yaml#/ApiResponse'
    ErrorResponse:
      $ref: './components/schemas/common.yaml#/ErrorResponse'
    PaginationInfo:
      $ref: './components/schemas/common.yaml#/PaginationInfo'
    
    # 认证相关
    LoginRequest:
      $ref: './components/schemas/auth.yaml#/LoginRequest'
    LoginResponse:
      $ref: './components/schemas/auth.yaml#/LoginResponse'
    RegisterRequest:
      $ref: './components/schemas/auth.yaml#/RegisterRequest'
    UserInfo:
      $ref: './components/schemas/auth.yaml#/UserInfo'
    
    # 用户管理相关
    UserDetail:
      $ref: './components/schemas/user.yaml#/UserDetail'
    CreateUserRequest:
      $ref: './components/schemas/user.yaml#/CreateUserRequest'
    BatchUserOperationRequest:
      $ref: './components/schemas/user.yaml#/BatchUserOperationRequest'
    UserStatistics:
      $ref: './components/schemas/user.yaml#/UserStatistics'
    
    # 文件相关
    FileInfo:
      $ref: './components/schemas/file.yaml#/FileInfo'
    FileUploadRequest:
      $ref: './components/schemas/file.yaml#/FileUploadRequest'
    
    # 文件夹相关
    FolderInfo:
      $ref: './components/schemas/folder.yaml#/FolderInfo'
    CreateFolderRequest:
      $ref: './components/schemas/folder.yaml#/CreateFolderRequest'
    
    # 系统管理相关
    SystemStatistics:
      $ref: './components/schemas/system.yaml#/SystemStatistics'
    SystemHealth:
      $ref: './components/schemas/system.yaml#/SystemHealth'

  # 通用响应定义
  responses:
    Success:
      $ref: './components/responses/common.yaml#/Success'
    Created:
      $ref: './components/responses/common.yaml#/Created'
    BadRequest:
      $ref: './components/responses/common.yaml#/BadRequest'
    Unauthorized:
      $ref: './components/responses/common.yaml#/Unauthorized'
    Forbidden:
      $ref: './components/responses/common.yaml#/Forbidden'
    NotFound:
      $ref: './components/responses/common.yaml#/NotFound'
    Conflict:
      $ref: './components/responses/common.yaml#/Conflict'
    TooManyRequests:
      $ref: './components/responses/common.yaml#/TooManyRequests'
    InternalServerError:
      $ref: './components/responses/common.yaml#/InternalServerError'

  # 通用参数定义
  parameters:
    # 分页参数
    PageParam:
      $ref: './components/parameters/common.yaml#/PageParam'
    SizeParam:
      $ref: './components/parameters/common.yaml#/SizeParam'
    
    # 排序参数
    SortParam:
      $ref: './components/parameters/common.yaml#/SortParam'
    DirectionParam:
      $ref: './components/parameters/common.yaml#/DirectionParam'
    
    # 搜索参数
    KeywordParam:
      $ref: './components/parameters/common.yaml#/KeywordParam'
    
    # 资源ID参数
    FileIdParam:
      $ref: './components/parameters/common.yaml#/FileIdParam'
    FolderIdParam:
      $ref: './components/parameters/common.yaml#/FolderIdParam'
    UserIdParam:
      $ref: './components/parameters/common.yaml#/UserIdParam'

# ==================== API路径定义 ====================
paths:
  # 认证相关API
  /api/auth/login:
    $ref: './paths/auth.yaml#/~1api~1auth~1login'
  /api/auth/register:
    $ref: './paths/auth.yaml#/~1api~1auth~1register'
  /api/auth/logout:
    $ref: './paths/auth.yaml#/~1api~1auth~1logout'
  /api/auth/refresh:
    $ref: './paths/auth.yaml#/~1api~1auth~1refresh'
  /api/auth/me:
    $ref: './paths/auth.yaml#/~1api~1auth~1me'
  /api/auth/profile:
    $ref: './paths/auth.yaml#/~1api~1auth~1profile'
  /api/auth/password:
    $ref: './paths/auth.yaml#/~1api~1auth~1password'
  /api/auth/password/reset-request:
    $ref: './paths/auth.yaml#/~1api~1auth~1password~1reset-request'
  /api/auth/password/reset-confirm:
    $ref: './paths/auth.yaml#/~1api~1auth~1password~1reset-confirm'
  
  # 系统管理API
  /api/admin/system/users:
    $ref: './paths/admin/system.yaml#/~1api~1admin~1system~1users'
  /api/admin/system/users/{userId}:
    $ref: './paths/admin/system.yaml#/~1api~1admin~1system~1users~1{userId}'
  /api/admin/system/users/batch:
    $ref: './paths/admin/system.yaml#/~1api~1admin~1system~1users~1batch'
  
  # 统计监控API
  /api/admin/statistics/users:
    $ref: './paths/admin/statistics.yaml#/~1api~1admin~1statistics~1users'
  /api/admin/statistics/files:
    $ref: './paths/admin/statistics.yaml#/~1api~1admin~1statistics~1files'
  /api/admin/statistics/storage:
    $ref: './paths/admin/statistics.yaml#/~1api~1admin~1statistics~1storage'
  /api/admin/statistics/system:
    $ref: './paths/admin/statistics.yaml#/~1api~1admin~1statistics~1system'
  /api/admin/statistics/dashboard:
    $ref: './paths/admin/statistics.yaml#/~1api~1admin~1statistics~1dashboard'

# ==================== 标签分组 ====================
tags:
  $ref: './tags/definitions.yaml'

# ==================== 外部文档链接 ====================
externalDocs:
  description: "Lyra项目文档和开发指南"
  url: "https://github.com/your-org/lyra/wiki"
